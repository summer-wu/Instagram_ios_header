//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CALayer.h"

#import "CPTResponder.h"

@class CPTGraph, CPTShadow, NSSet, NSString;

@interface CPTLayer : CALayer <CPTResponder>
{
    BOOL masksToBorder;
    BOOL useFastRendering;
    BOOL renderingRecursively;
    CPTGraph *graph;
    float paddingLeft;
    float paddingTop;
    float paddingRight;
    float paddingBottom;
    CPTShadow *shadow;
    const struct CGPath *outerBorderPath;
    const struct CGPath *innerBorderPath;
    id <NSCopying><NSCoding><NSObject> identifier;
}

@property(nonatomic, getter=isRenderingRecursively) BOOL renderingRecursively; // @synthesize renderingRecursively;
@property(copy, nonatomic) id <NSCopying><NSCoding><NSObject> identifier; // @synthesize identifier;
@property(nonatomic) BOOL useFastRendering; // @synthesize useFastRendering;
@property(nonatomic) const struct CGPath *innerBorderPath; // @synthesize innerBorderPath;
@property(nonatomic) const struct CGPath *outerBorderPath; // @synthesize outerBorderPath;
@property(copy, nonatomic) CPTShadow *shadow; // @synthesize shadow;
@property(nonatomic) BOOL masksToBorder; // @synthesize masksToBorder;
@property(nonatomic) float paddingBottom; // @synthesize paddingBottom;
@property(nonatomic) float paddingRight; // @synthesize paddingRight;
@property(nonatomic) float paddingTop; // @synthesize paddingTop;
@property(nonatomic) float paddingLeft; // @synthesize paddingLeft;
@property(nonatomic) __weak CPTGraph *graph; // @synthesize graph;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)subLayersAtIndex:(unsigned int)arg1;
- (void)logLayers;
@property(readonly, copy) NSString *description;
- (void)setCornerRadius:(float)arg1;
- (void)setAnchorPoint:(struct CGPoint)arg1;
- (struct CGPoint)anchorPoint;
- (void)setBounds:(struct CGRect)arg1;
- (struct CGRect)bounds;
@property float contentsScale; // @dynamic contentsScale;
- (void)setHidden:(BOOL)arg1;
- (void)setPosition:(struct CGPoint)arg1;
- (void)setNeedsDisplay;
- (void)setNeedsLayout;
- (void)applyMaskToContext:(struct CGContext *)arg1;
- (void)applySublayerMaskToContext:(struct CGContext *)arg1 forSublayer:(id)arg2 withOffset:(struct CGPoint)arg3;
@property(readonly, nonatomic) const struct CGPath *sublayerMaskingPath; // @dynamic sublayerMaskingPath;
@property(readonly, nonatomic) const struct CGPath *maskingPath; // @dynamic maskingPath;
- (void)replaceSublayer:(id)arg1 with:(id)arg2;
- (void)insertSublayer:(id)arg1 above:(id)arg2;
- (void)insertSublayer:(id)arg1 below:(id)arg2;
- (void)insertSublayer:(id)arg1 atIndex:(unsigned int)arg2;
- (void)addSublayer:(id)arg1;
- (void)setSublayers:(id)arg1;
- (void)sublayerMarginLeft:(float *)arg1 top:(float *)arg2 right:(float *)arg3 bottom:(float *)arg4;
@property(readonly, nonatomic) NSSet *sublayersExcludedFromAutomaticLayout; // @dynamic sublayersExcludedFromAutomaticLayout;
- (void)layoutSublayers;
@property(readonly, nonatomic) struct CGSize shadowMargin; // @dynamic shadowMargin;
- (void)pixelAlign;
- (BOOL)pointingDeviceCancelledEvent:(struct UIEvent *)arg1;
- (BOOL)pointingDeviceDraggedEvent:(struct UIEvent *)arg1 atPoint:(struct CGPoint)arg2;
- (BOOL)pointingDeviceUpEvent:(struct UIEvent *)arg1 atPoint:(struct CGPoint)arg2;
- (BOOL)pointingDeviceDownEvent:(struct UIEvent *)arg1 atPoint:(struct CGPoint)arg2;
- (id)dataForPDFRepresentationOfLayer;
- (void)layoutAndRenderInContext:(struct CGContext *)arg1;
- (void)applyTransform:(struct CATransform3D)arg1 toContext:(struct CGContext *)arg2;
- (void)recursivelyRenderInContext:(struct CGContext *)arg1;
- (void)renderAsVectorInContext:(struct CGContext *)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)display;
- (id)actionForKey:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithLayer:(id)arg1;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct UIImage *)imageOfLayer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

