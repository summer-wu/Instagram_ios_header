//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "IGVideoTrimViewControlDelegate.h"
#import "IGVideoTrimViewDelegate.h"
#import "UIScrollViewDelegate.h"

@class IGVideoClip, IGVideoTrimView, NSString;

@interface IGVideoTrimViewController : UIViewController <IGVideoTrimViewDelegate, IGVideoTrimViewControlDelegate, UIScrollViewDelegate>
{
    BOOL _alwaysClampsTrimmedRange;
    BOOL _clampTrimmedRange;
    BOOL _pendingTrimHandleJustification;
    IGVideoClip *_videoClip;
    id <IGVideoTrimControllerDelegate> _trimRangeDelegate;
    unsigned int _confirmationDisplayType;
    id <IGVideoTrimConfirmationDelegate> _confirmationDelegate;
    float _timeScale;
    float _minClipLength;
    float _maxClipLength;
    IGVideoTrimView *_trimView;
    float _fixedPlaybackSpeed;
    float _dynamicPlaybackSpeed;
    float _previousContentOffset;
    struct _IGRange _workingTrimmedRange;
    struct _IGRange _committedTrimmedRange;
    struct UIEdgeInsets _trimViewContentInsets;
}

@property(nonatomic) BOOL pendingTrimHandleJustification; // @synthesize pendingTrimHandleJustification=_pendingTrimHandleJustification;
@property(nonatomic) float previousContentOffset; // @synthesize previousContentOffset=_previousContentOffset;
@property(nonatomic) BOOL clampTrimmedRange; // @synthesize clampTrimmedRange=_clampTrimmedRange;
@property(nonatomic) float dynamicPlaybackSpeed; // @synthesize dynamicPlaybackSpeed=_dynamicPlaybackSpeed;
@property(nonatomic) float fixedPlaybackSpeed; // @synthesize fixedPlaybackSpeed=_fixedPlaybackSpeed;
@property(retain, nonatomic) IGVideoTrimView *trimView; // @synthesize trimView=_trimView;
@property(nonatomic) struct _IGRange committedTrimmedRange; // @synthesize committedTrimmedRange=_committedTrimmedRange;
@property(nonatomic) struct _IGRange workingTrimmedRange; // @synthesize workingTrimmedRange=_workingTrimmedRange;
@property(nonatomic) float maxClipLength; // @synthesize maxClipLength=_maxClipLength;
@property(nonatomic) float minClipLength; // @synthesize minClipLength=_minClipLength;
@property(nonatomic) struct UIEdgeInsets trimViewContentInsets; // @synthesize trimViewContentInsets=_trimViewContentInsets;
@property(nonatomic) float timeScale; // @synthesize timeScale=_timeScale;
@property(nonatomic) BOOL alwaysClampsTrimmedRange; // @synthesize alwaysClampsTrimmedRange=_alwaysClampsTrimmedRange;
@property(nonatomic) __weak id <IGVideoTrimConfirmationDelegate> confirmationDelegate; // @synthesize confirmationDelegate=_confirmationDelegate;
@property(nonatomic) unsigned int confirmationDisplayType; // @synthesize confirmationDisplayType=_confirmationDisplayType;
@property(nonatomic) __weak id <IGVideoTrimControllerDelegate> trimRangeDelegate; // @synthesize trimRangeDelegate=_trimRangeDelegate;
@property(retain, nonatomic) IGVideoClip *videoClip; // @synthesize videoClip=_videoClip;
- (void).cxx_destruct;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)trimViewDidEndUpdatingTrimmedRange:(id)arg1;
- (void)trimView:(id)arg1 didUpdateTrimmedRange:(struct _IGRange)arg2;
- (void)trimViewWillBeginUpdatingTrimmedRange:(id)arg1;
- (void)videoTrimViewDidPressCancel;
- (void)videoTrimViewDidPressDone;
- (void)confirmTrim;
- (void)rejectTrim;
- (unsigned int)currentRubberbandingType;
- (void)finishTrimming;
- (void)configureNavItems;
- (void)updateVideoTrimmedTimesWithTrimmedRange:(struct _IGRange)arg1;
@property(readonly, nonatomic) unsigned int panningTrimHandle;
- (void)updatePlaybackTime:(CDStruct_1b6d18a9)arg1;
- (void)updateWithVideoClip:(id)arg1 minClipLenght:(float)arg2 maxClipLength:(float)arg3;
- (void)viewDidLayoutSubviews;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

