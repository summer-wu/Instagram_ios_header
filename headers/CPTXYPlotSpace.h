//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CPTPlotSpace.h"

#import "CPTAnimationDelegate.h"

@class CPTPlotRange, NSMutableArray, NSString;

@interface CPTXYPlotSpace : CPTPlotSpace <CPTAnimationDelegate>
{
    BOOL allowsMomentumX;
    BOOL allowsMomentumY;
    CPTPlotRange *xRange;
    CPTPlotRange *yRange;
    CPTPlotRange *globalXRange;
    CPTPlotRange *globalYRange;
    int xScaleType;
    int yScaleType;
    int momentumAnimationCurve;
    int bounceAnimationCurve;
    float momentumAcceleration;
    float bounceAcceleration;
    float minimumDisplacementToDrag;
    NSMutableArray *animations;
    struct CGPoint lastDragPoint;
    struct CGPoint lastDisplacement;
    double lastDragTime;
    double lastDeltaTime;
}

@property(retain, nonatomic) NSMutableArray *animations; // @synthesize animations;
@property(nonatomic) double lastDeltaTime; // @synthesize lastDeltaTime;
@property(nonatomic) double lastDragTime; // @synthesize lastDragTime;
@property(nonatomic) struct CGPoint lastDisplacement; // @synthesize lastDisplacement;
@property(nonatomic) struct CGPoint lastDragPoint; // @synthesize lastDragPoint;
@property(nonatomic) float minimumDisplacementToDrag; // @synthesize minimumDisplacementToDrag;
@property(nonatomic) float bounceAcceleration; // @synthesize bounceAcceleration;
@property(nonatomic) float momentumAcceleration; // @synthesize momentumAcceleration;
@property(nonatomic) int bounceAnimationCurve; // @synthesize bounceAnimationCurve;
@property(nonatomic) int momentumAnimationCurve; // @synthesize momentumAnimationCurve;
@property(nonatomic) BOOL allowsMomentumY; // @synthesize allowsMomentumY;
@property(nonatomic) BOOL allowsMomentumX; // @synthesize allowsMomentumX;
@property(nonatomic) int yScaleType; // @synthesize yScaleType;
@property(nonatomic) int xScaleType; // @synthesize xScaleType;
@property(copy, nonatomic) CPTPlotRange *globalYRange; // @synthesize globalYRange;
@property(copy, nonatomic) CPTPlotRange *globalXRange; // @synthesize globalXRange;
@property(copy, nonatomic) CPTPlotRange *yRange; // @synthesize yRange;
@property(copy, nonatomic) CPTPlotRange *xRange; // @synthesize xRange;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (void)animationDidFinish:(id)arg1;
@property(nonatomic) BOOL allowsMomentum; // @dynamic allowsMomentum;
- (void)cancelAnimations;
- (id)shiftRange:(id)arg1 by:(CDStruct_6ece915e)arg2 usingMomentum:(BOOL)arg3 inGlobalRange:(id)arg4 withDisplacement:(float *)arg5;
- (BOOL)pointingDeviceDraggedEvent:(struct UIEvent *)arg1 atPoint:(struct CGPoint)arg2;
- (BOOL)pointingDeviceUpEvent:(struct UIEvent *)arg1 atPoint:(struct CGPoint)arg2;
- (BOOL)pointingDeviceDownEvent:(struct UIEvent *)arg1 atPoint:(struct CGPoint)arg2;
- (void)scaleBy:(float)arg1 aboutPoint:(struct CGPoint)arg2;
- (void)doublePrecisionPlotPoint:(double *)arg1 numberOfCoordinates:(unsigned int)arg2 forEvent:(struct UIEvent *)arg3;
- (void)plotPoint:(CDStruct_6ece915e *)arg1 numberOfCoordinates:(unsigned int)arg2 forEvent:(struct UIEvent *)arg3;
- (id)plotPointForEvent:(struct UIEvent *)arg1;
- (struct CGPoint)plotAreaViewPointForEvent:(struct UIEvent *)arg1;
- (void)doublePrecisionPlotPoint:(double *)arg1 numberOfCoordinates:(unsigned int)arg2 forPlotAreaViewPoint:(struct CGPoint)arg3;
- (void)plotPoint:(CDStruct_6ece915e *)arg1 numberOfCoordinates:(unsigned int)arg2 forPlotAreaViewPoint:(struct CGPoint)arg3;
- (id)plotPointForPlotAreaViewPoint:(struct CGPoint)arg1;
- (struct CGPoint)plotAreaViewPointForDoublePrecisionPlotPoint:(double *)arg1 numberOfCoordinates:(unsigned int)arg2;
- (struct CGPoint)plotAreaViewPointForPlotPoint:(CDStruct_6ece915e *)arg1 numberOfCoordinates:(unsigned int)arg2;
- (struct CGPoint)plotAreaViewPointForPlotPoint:(id)arg1;
- (unsigned int)numberOfCoordinates;
- (double)doublePrecisionPlotCoordinateForViewLength:(float)arg1 logModulusPlotRange:(id)arg2 boundsLength:(float)arg3;
- (float)viewCoordinateForViewLength:(float)arg1 logModulusPlotRange:(id)arg2 doublePrecisionPlotCoordinateValue:(double)arg3;
- (double)doublePrecisionPlotCoordinateForViewLength:(float)arg1 logPlotRange:(id)arg2 boundsLength:(float)arg3;
- (float)viewCoordinateForViewLength:(float)arg1 logPlotRange:(id)arg2 doublePrecisionPlotCoordinateValue:(double)arg3;
- (double)doublePrecisionPlotCoordinateForViewLength:(float)arg1 linearPlotRange:(id)arg2 boundsLength:(float)arg3;
- (CDStruct_6ece915e)plotCoordinateForViewLength:(CDStruct_6ece915e)arg1 linearPlotRange:(id)arg2 boundsLength:(CDStruct_6ece915e)arg3;
- (float)viewCoordinateForViewLength:(float)arg1 linearPlotRange:(id)arg2 doublePrecisionPlotCoordinateValue:(double)arg3;
- (float)viewCoordinateForViewLength:(CDStruct_6ece915e)arg1 linearPlotRange:(id)arg2 plotCoordinateValue:(CDStruct_6ece915e)arg3;
- (void)scaleToFitPlots:(id)arg1;
- (float)viewCoordinateForRange:(id)arg1 coordinate:(int)arg2 direction:(BOOL)arg3;
- (void)animateRangeForCoordinate:(int)arg1 shift:(CDStruct_6ece915e)arg2 momentumTime:(float)arg3 speed:(float)arg4 acceleration:(float)arg5;
- (id)constrainRange:(id)arg1 toGlobalRange:(id)arg2;
- (int)scaleTypeForCoordinate:(int)arg1;
- (void)setScaleType:(int)arg1 forCoordinate:(int)arg2;
- (id)plotRangeForCoordinate:(int)arg1;
- (void)setPlotRange:(id)arg1 forCoordinate:(int)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(nonatomic) BOOL isDragging; // @dynamic isDragging;
@property(readonly) Class superclass;

@end

